### ReqFlow MVP API 测试文件
### 使用VS Code REST Client插件运行这些测试

@baseUrl = http://localhost:3000
@token = 

### 1. 健康检查
GET {{baseUrl}}/health

### 2. 用户注册
POST {{baseUrl}}/api/auth/register
Content-Type: application/json

{
  "email": "test@reqflow.com",
  "password": "test123456",
  "name": "测试用户"
}

### 3. 测试用户登录
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "15173737427@test.com",
  "password": "12345678"
}

### 4. 新用户登录 (先执行注册再执行这个)
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "test@reqflow.com",
  "password": "test123456"
}

### 获取返回的token后，更新上面的@token变量，然后执行下面的API

### 5. 获取项目列表
GET {{baseUrl}}/api/projects
Authorization: Bearer {{token}}

### 6. 创建新项目
POST {{baseUrl}}/api/projects
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "name": "我的第一个项目",
  "description": "这是一个测试项目，用于验证MVP功能"
}

### 7. 获取项目详情 (替换project_id)
GET {{baseUrl}}/api/projects/{{project_id}}
Authorization: Bearer {{token}}

### 8. 更新项目
PUT {{baseUrl}}/api/projects/{{project_id}}
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "name": "更新后的项目名称",
  "current_stage": "clarifying",
  "requirement_summary": "这是需求澄清后的总结"
}

### 9. 创建需求澄清对话
POST {{baseUrl}}/api/conversations
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "project_id": "{{project_id}}",
  "conversation_type": "requirement_clarification"
}

### 10. 发送对话消息 (替换conversation_id)
POST {{baseUrl}}/api/conversations/{{conversation_id}}/messages
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "content": "我想做一个在线教育平台，主要功能是课程管理和学员学习"
}

### 11. 获取对话详情
GET {{baseUrl}}/api/conversations/{{conversation_id}}
Authorization: Bearer {{token}}

### 12. 完成对话
PUT {{baseUrl}}/api/conversations/{{conversation_id}}/complete
Authorization: Bearer {{token}}

### 13. 创建技术选型对话
POST {{baseUrl}}/api/conversations
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "project_id": "{{project_id}}",
  "conversation_type": "tech_selection"
}

### 14. 技术选型消息
POST {{baseUrl}}/api/conversations/{{conversation_id}}/messages
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "content": "基于在线教育平台的需求，请推荐合适的技术栈。平台需要支持视频播放、用户管理、课程管理等功能。"
}